{% extends 'base.html.twig' %}

{% block headerTitle %}Dashboard{% endblock %}

{% block breadcrumbs %}
    <li class="active"><span>Dashboard</span></li>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <canvas id="jobsByWeek" width="400" height="250"></canvas>
                <h5 align="center">Total open jobs: {{ totalOpenJobs }}</h5>
            </div>
            <div class="col-md-6">
                <canvas id="productionByWeek" width="400" height="250"></canvas>
                <h5 align="center">Total fixtures to build : {{ totalFixturesToBuild }}</h5>
                <h5 align="center">Fixtures shipped this month => V2: {{ fixturesV2ShippedThisMonth }} | MAC: {{ fixturesMacShippedThisMonth }}</h5>
            </div>
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <canvas id="jobsByStage" width="400" height="250"></canvas>
            </div>
            <div class="col-md-6">
                <table class="table">
                    <tr>
                        <td>Jobs released last week</td>
                        <td>{{ jobsReleasedLastWeek }}</td>
                    </tr>
                    <tr>
                        <td>Jobs shipped last week</td>
                        <td>{{ jobsShippedLastWeek }}</td>
                    </tr>
                    <tr>
                        <td colspan = '2'>Late jobs: {{ lateJobs|length }}
                            <BR>
                            <table class="table">
                                <tr>
                                    <td>Name</td>
                                    <td>SO#</td>
                                    <td style="width:7ch">ESD</td>
                                    <td style="width:7ch;font-size:80%">Planner ESD</td>
                                </tr>
                                {% for lateJob in lateJobs %}
                                <tr>
                                    <td>{{ lateJob.name }}</td>
                                    <td>{{ lateJob.salesOrder }}</td>
                                    <td>{{ lateJob.estimatedShipDate|date("m-d") }}</td>
                                    <td>{{ lateJob.plannerEstimatedShipDate|date("m-d") }}</td>
                                </tr>
                                {% endfor %}
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    // Scheduling (# of jobs)
    var tmp = '{{ weeks }}';
    var weeks = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ jobsByWeek }}';
    var jobsByWeek = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ rushJobsByWeek }}';
    var rushJobsByWeek = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ shippedJobsByWeek }}';
    var shippedJobsByWeek = tmp.replace(/&quot;/g, '\"');

    var ctx = document.getElementById("jobsByWeek").getContext('2d');
    var jobsByWeek = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: JSON.parse(weeks),
            datasets: [
                {
                    label: 'Jobs',
                    data: JSON.parse(jobsByWeek),
                    backgroundColor: "blue",
                },
                {
                    label: 'Rush Jobs',
                    data: JSON.parse(rushJobsByWeek),
                    backgroundColor: "orange",
                },
                {
                    label: 'Shipped Jobs',
                    data: JSON.parse(shippedJobsByWeek),
                    backgroundColor: "green",
                },
            ]
        },
        options: {
            title: {
                display: true,
                text: 'Scheduling (# of jobs)'
            },
            scales: {
                xAxes: [{
                    stacked: true,
                }],
                yAxes: [{
                    stacked: true,
                }]
            },
        }
    });

    // Production Load By Location
    tmp = '{{ productionV2ByWeek }}';
    var v2FixturesByWeek = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ productionMacByWeek }}';
    var macFixturesByWeek = tmp.replace(/&quot;/g, '\"');
    var ctx2 = document.getElementById("productionByWeek").getContext('2d');
    var jobsByWeek = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: JSON.parse(weeks),
            datasets: [
                {
                    label: 'V2 Fixtures',
                    data: JSON.parse(v2FixturesByWeek),
                    borderColor: "blue",
                    fill: false,

                },
                {
                    label: 'MAC Fixtures',
                    data: JSON.parse(macFixturesByWeek),
                    borderColor: "orange",
                    fill: false,
                },
            ]
        },
        options: {
            title: {
                display: true,
                text: 'Production load by location'
            },
        }
    });

    // Scheduling by Job Life Stage
    tmp = '{{ stageTexts }}';
    var stageTexts = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ jobsByStageTexts }}';
    var jobsByStageTexts = tmp.replace(/&quot;/g, '\"');
    tmp = '{{ jobsClearToBuildByStageTexts }}';
    var jobsClearToBuildByStageTexts = tmp.replace(/&quot;/g, '\"');
    var ctx3 = document.getElementById("jobsByStage").getContext('2d');
    var jobsByWeek = new Chart(ctx3, {
        type: 'horizontalBar',
        data: {
            labels: JSON.parse(stageTexts),
            datasets: [
                {
                    label: 'Jobs',
                    data: JSON.parse(jobsByStageTexts),
                    backgroundColor: "blue",
                },
                {
                    label: 'Jobs (clear to build)',
                    data: JSON.parse(jobsClearToBuildByStageTexts),
                    backgroundColor: "orange",
                },
            ]
        },
        options: {
            title: {
                display: true,
                text: 'Scheduling by Job Life Stage'
            },
            scales: {
                xAxes: [{
                    stacked: true,
                }],
                yAxes: [{
                    stacked: true,
                }]
            },
        }
    });
</script>
{% endblock %}